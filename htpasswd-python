#! /usr/bin/python

from crypt import crypt, METHOD_CRYPT
from sys import argv
from os.path import exists
from getpass import getpass

path = argv[-2]
user = argv[-1]

if len(argv) == 3:
    if not exists(path):
        raise FileNotFoundError()
elif len(argv) == 4:
    if argv[1] == "-c":
        if exists(path):
            raise FileExistsError(path)
    else:
        raise ArgumentError(argv[1])
else:
    # FIXME: find better exception
    raise SyntaxError("usage: " + argv[0] + " [-c] passwordfile username")

# thttpd uses plain crypt (DES), unsalted passwords
first  = getpass("Password: ")
second = getpass("Confirm: ")
if first == second:
    new_hash = crypt(first, salt=METHOD_CRYPT)
else:
    raise ValueError("Passwords do not match")

# TODO: edit-in-place, preferrably with mmap
lines = []
found = False
with open(path, "r+") as f:
    for line in f:
        ht_user, ht_hash = line.strip().split(':')
        if ht_user == user:
            ht_hash = new_hash
        lines.append(':'.join([ht_user, ht_hash]))

    if not found:  # TODO: replace with for-break and write-in-place
        lines.append(':'.join([user, new_hash]))

    print(lines)

    f.seek(0)
    f.write('\n'.join(lines))
