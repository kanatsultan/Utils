#! /usr/bin/python

"""
Drop-in replacement for thttpd's htpasswd binary.

Original program segfaults on local version of 2.26.
"""

from crypt import crypt, METHOD_CRYPT
from os.path import exists
from getpass import getpass

from argparse import ArgumentParser


parser = ArgumentParser(description="Add entries to thttpd .htpasswd file")
parser.add_argument("-c", dest="create",
                    action="store_const", const=True, default=False)
parser.add_argument("path", help="path to .htpasswd")
parser.add_argument("user", help="name of user to add")

ns = parser.parse_args()
path = ns.path
user = ns.user

# Preemptive checks, so as to not make user waste time.
if ns.create:
    if exists(path):
        raise FileExistsError(path)
else:
    if not exists(path):
        raise FileNotFoundError()

first  = getpass("Password: ")
second = getpass("Confirm: ")
if first == second:
    # thttpd uses plain crypt (DES), unsalted passwords
    new_hash = crypt(first, salt=METHOD_CRYPT)
else:
    raise ValueError("Passwords do not match")

# TODO: edit-in-place, preferrably with mmap
lines = []
found = False
with open(path, "x+" if ns.create else "r+") as f:
    for line in f:
        ht_user, ht_hash = line.strip().split(':')
        if ht_user == user:
            ht_hash = new_hash
        lines.append(':'.join([ht_user, ht_hash]))

    if not found:  # TODO: replace with for-break and write-in-place
        lines.append(':'.join([user, new_hash]))

    f.seek(0)
    f.write('\n'.join(lines))
